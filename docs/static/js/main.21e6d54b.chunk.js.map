{"version":3,"sources":["components/AddCategory.js","components/GifGridItem.js","helpers/GetGifs.js","components/GridGifs.js","hooks/useFetchGifs.js","GitsExpextApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setinputValue","onSubmit","e","preventDefault","trim","length","cats","type","onChange","target","value","className","GifGridItem","img","style","height","src","url","alt","title","getGifs","category","a","encodeURI","fetch","resp","json","data","gifs","map","gif","id","images","original","GridGifs","imagen","loading","state","setState","useEffect","then","info","useFetchGifs","GitsExpextApp","props","categories","ReactDOM","render","document","getElementById"],"mappings":"yKAEaA,EAAc,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,cAAoB,EAEZC,mBAAS,IAFG,mBAEzCC,EAFyC,KAE7BC,EAF6B,KAehD,OACE,sBAAMC,SAZQ,SAACC,GACfA,EAAEC,iBACEJ,EAAWK,OAAOC,OAAS,IAC7BR,GAAc,SAACS,GAAD,OAAWP,GAAX,mBAA0BO,OACxCN,EAAc,MAQhB,SACE,uBACEO,KAAK,OACLC,SAPc,SAACN,GACnBF,EAAcE,EAAEO,OAAOC,QAOnBA,MAAOX,EACPY,UAAU,oBCrBLC,EAAc,SAAC,GAAa,IAAXC,EAAU,EAAVA,IAC5B,OACE,qBAAKF,UAAU,qCAAf,SACE,sBAAKA,UAAU,aAAf,UACE,qBACEG,MAAO,CAAEC,OAAQ,KACjBJ,UAAU,QACVK,IAAKH,EAAII,IACTC,IAAKL,EAAIM,QAEX,qBAAKR,UAAU,YAAf,SACE,mBAAGA,UAAU,oCAAb,SAAkDE,EAAIM,gB,uBCbnDC,EAAO,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DACjBL,EADiB,yFACuEM,UAC1FF,GAFmB,sBAIFG,MAAMP,GAJJ,cAIfQ,EAJe,gBAKEA,EAAKC,OALP,uBAKbC,EALa,EAKbA,KACFC,EAAOD,EAAKE,KAAI,SAACC,GACrB,MAAO,CACLC,GAAID,EAAIC,GACRZ,MAAOW,EAAIX,MACXF,IAAKa,EAAIE,OAAOC,SAAShB,QAVR,kBAadW,GAbc,4CAAH,sDC0BLM,EArBE,SAAC,GAAkB,IAAhBb,EAAe,EAAfA,SAMJc,ECRY,SAACd,GAAc,IAAD,EACdvB,mBAAS,CACjC6B,KAAM,GACNS,SAAS,IAH6B,mBACjCC,EADiC,KAC1BC,EAD0B,KAkBxC,OAZAC,qBAAU,WACRnB,EAAQC,GAAUmB,MAChB,SAACC,GAAD,OAEEH,EAAS,CACPX,KAAMc,EACNL,SAAS,SAId,CAACf,IAEGgB,EDVkBK,CAAarB,GAA9BM,KACR,OACE,eAAC,WAAD,WACE,oBAAIhB,UAAU,wCAAd,SAAuDU,IACvD,qBAAKV,UAAU,4CAAf,SACGwB,EAAON,KAAI,SAAChB,GAAD,OACV,cAAC,EAAD,CAA0BA,IAAKA,GAAbA,EAAIkB,aEgBjBY,EA5BO,SAACC,GAAU,MAEK9C,mBAAS,CAAC,cAFf,mBAExB+C,EAFwB,KAEZhD,EAFY,KAU/B,OACE,qCACE,kDACA,cAAC,EAAD,CAAaA,cAAeA,IAC5B,uBAEA,6BACGgD,EAAWhB,KAAI,SAACR,GAAD,OAEd,aADA,CACC,EAAD,CAAyBA,SAAUA,GAApBA,Y,MCnBzByB,IAASC,OAAO,cAAC,EAAD,IAAmBC,SAASC,eAAe,W","file":"static/js/main.21e6d54b.chunk.js","sourcesContent":["import React, { useState } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nexport const AddCategory = ({ setCategories }) => {\r\n  //create a a state form the value input\r\n  const [inputValue, setinputValue] = useState(\"\");\r\n  //add a category\r\n  const addCate = (e) => {\r\n    e.preventDefault();\r\n    if (inputValue.trim().length > 2) {\r\n      setCategories((cats) => [inputValue, ...cats]);\r\n      setinputValue(\"\");\r\n    }\r\n  };\r\n  // change the value of the input\r\n  const handleInput = (e) => {\r\n    setinputValue(e.target.value);\r\n  };\r\n  return (\r\n    <form onSubmit={addCate}>\r\n      <input\r\n        type=\"text\"\r\n        onChange={handleInput}\r\n        value={inputValue}\r\n        className=\"form-control\"\r\n      />\r\n    </form>\r\n  );\r\n};\r\n\r\nAddCategory.propTypes = {\r\n  setCategories: PropTypes.func.isRequired,\r\n};\r\n","import React from \"react\";\r\n\r\nexport const GifGridItem = ({ img }) => {\r\n  return (\r\n    <div className=\"col-md-4 animate__lightSpeedInLeft\">\r\n      <div className=\"card  my-2\">\r\n        <img\r\n          style={{ height: 200 }}\r\n          className=\"w-100\"\r\n          src={img.url}\r\n          alt={img.title}\r\n        />\r\n        <div className=\"card-body\">\r\n          <p className=\"card-text text-center text-danger\">{img.title}</p>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","export const getGifs = async (category) => {\r\n  let url = `http://api.giphy.com/v1/gifs/search?api_key=A60pVAO6LFUHNO93wgQyAYff1jmu5nJL&q=${encodeURI(\r\n    category\r\n  )}&limit=10`;\r\n  const resp = await fetch(url);\r\n  const { data } = await resp.json();\r\n  const gifs = data.map((gif) => {\r\n    return {\r\n      id: gif.id,\r\n      title: gif.title,\r\n      url: gif.images.original.url,\r\n    };\r\n  });\r\n  return gifs;\r\n};\r\n","import React, { Fragment } from \"react\";\r\n// import PropTypes from \"prop-types\";\r\nimport { GifGridItem } from \"./GifGridItem\";\r\nimport { useFetchGifs } from \"../hooks/useFetchGifs\";\r\n// import { getGifs } from \"../helpers/GetGifs\";\r\nconst GridGifs = ({ category }) => {\r\n  //   const [imagen, setImagen] = useState([]);\r\n  // el useEffect sirve para que cuando se haga un cambio en el componente , no vuelve a actualizar todo el componente\r\n  //   useEffect(() => {\r\n  //     getGifs(category).then((data) => setImagen(data));\r\n  //   }, [category]);\r\n  const { data: imagen } = useFetchGifs(category);\r\n  return (\r\n    <Fragment>\r\n      <h2 className=\"text-center text-uppercase text-white\">{category}</h2>\r\n      <div className=\"row justify-content-space-between  d-flex\">\r\n        {imagen.map((img) => (\r\n          <GifGridItem key={img.id} img={img} />\r\n        ))}\r\n      </div>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nGridGifs.propTypes = {};\r\n\r\nexport default GridGifs;\r\n","import { useState, useEffect } from \"react\";\r\nimport { getGifs } from \"../helpers/GetGifs\";\r\n\r\nexport const useFetchGifs = (category) => {\r\n  const [state, setState] = useState({\r\n    data: [],\r\n    loading: true,\r\n  });\r\n\r\n  useEffect(() => {\r\n    getGifs(category).then(\r\n      (info) =>\r\n        //   setTimeout(() => {\r\n        setState({\r\n          data: info,\r\n          loading: false,\r\n        })\r\n      //   }, 3000)\r\n    );\r\n  }, [category]);\r\n\r\n  return state;\r\n};\r\n","import React, { useState } from \"react\";\r\n// import PropTypes from \"prop-types\";\r\nimport { AddCategory } from \"./components/AddCategory\";\r\nimport GridGifs from \"./components/GridGifs\";\r\n\r\nconst GitsExpextApp = (props) => {\r\n  //create a array of categories using usestat\r\n  const [categories, setCategories] = useState([\"One Punch\"]);\r\n  // //create the function to add a element to my array\r\n  // const handleAdd = () => {\r\n  //   // add the element\r\n  //   // setCategories([...categories, \"other\"]);\r\n  //   // other form to that\r\n  //   setCategories((cats) => [...cats, \"Hilaire\"]);\r\n  // };\r\n  return (\r\n    <>\r\n      <h2>Gifs Expexts App</h2>\r\n      <AddCategory setCategories={setCategories} />\r\n      <hr />\r\n      {/* <button onClick={handleAdd}>Add</button> */}\r\n      <ol>\r\n        {categories.map((category) => (\r\n          // <li key={category}>{category}</li>\r\n          <GridGifs key={category} category={category} />\r\n        ))}\r\n      </ol>\r\n    </>\r\n  );\r\n};\r\n\r\n// GitsExpextApp.propTypes = {};\r\n\r\nexport default GitsExpextApp;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport GitsExpextApp from \"./GitsExpextApp\";\r\nimport \"./index.css\";\r\n\r\nReactDOM.render(<GitsExpextApp />, document.getElementById(\"root\"));\r\n"],"sourceRoot":""}